/*
  Custom script to add next meal automatically.  Invoke it thus:
	.read sequence.sqlite3
  This is something NUTsqlite can't do, complicated meal ordering with
  automatic changes to personal options!

  The basic idea here is 5 low-fat starch meals followed by 3 low-carb meals.
  Within the low-fat meals, starch source is alternated.  Modulo arithmetic
  selects which meal and personal options are to be chosen by defining a little
  view which can be repeatedly be selected from by each subsequent SQL
  statement in the procedure.
*/

begin;

WITH newcm
     (
          meal_id
     )
     AS
     (
          WITH cm1
               (
                    base,
                    meal
               )
               AS
               (
                    WITH cm
                         (
                              base,
                              meal
                         )
                         AS
                         (
                                SELECT currentmeal / 100,
                                       currentmeal % 100
                                FROM   options
                         )
                  SELECT
                         CASE
                                WHEN meal = 3 THEN Date(Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2), '+1 day')
                                ELSE Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2)
                         END,
                         CASE
                                WHEN meal = 3 THEN 1
                                ELSE meal + 1
                         END
                  FROM   cm
               )
        SELECT Cast( Substr(base, 1, 4)
                      || Substr(base, 6, 2)
                      || Substr(base, 9, 2) AS INT) * 100 + meal
        FROM   cm1
     )
UPDATE options
SET    currentmeal =
       (
              SELECT meal_id
              FROM   newcm);DROP VIEWIF EXISTS z_mn;CREATE temp VIEW z_mn AS
WITH meal
     (
          m,
          mod2,
          mod8
     )
     AS
     (
            SELECT options.currentmeal % 100,
                   maxmeal %             2,
                   maxmeal %             8
            FROM   options,
                   am_analysis_header
     )SELECT
       CASE
              WHEN mod8 NOT IN (1,
                                2,
                                3) THEN
                     CASE
                            WHEN mod2 = 1 THEN
                                   CASE
                                          WHEN m = 1 THEN 'R Breakfast'
                                          WHEN m = 2 THEN 'R Dinner'
                                          ELSE 'R Supper'
                                   END
                            ELSE
                                   CASE
                                          WHEN m = 1 THEN 'P Breakfast'
                                          WHEN m = 2 THEN 'P Dinner'
                                          ELSE 'P Supper'
                                   END
                     END
              ELSE
                     CASE
                            WHEN m = 1 THEN 'K Breakfast'
                            WHEN m = 2 THEN 'K Dinner'
                            ELSE 'K Supper'
                     END
       END AS mn,
       mod8
FROM   meal;INSERT INTO currentmeal
SELECT ndb_no,
       gm_wgt,
       nutrdesc
FROM   theusual
WHERE  meal_name =
       (
              SELECT mn
              FROM   z_mn);UPDATE nutr_def
SET    nutopt =
       CASE
              WHEN
                     (
                            SELECT mod8
                            FROM   z_mn) NOT IN (1,
                                                 2,
                                                 3) THEN -1
              ELSE 0.0
       END
WHERE  nutrdesc = 'Total Fat';UPDATE nutr_def
SET    nutopt =
       CASE
              WHEN
                     (
                            SELECT mod8
                            FROM   z_mn) NOT IN (1,
                                                 2,
                                                 3) THEN 0.0
              ELSE -1
       END
WHERE  nutrdesc = 'Non-Fiber Carb';UPDATE options
SET    defanal_am =
       CASE
              WHEN
                     (
                            SELECT mod8
                            FROM   z_mn) IN (2,
                                             5) THEN 1
              ELSE defanal_am + 1
       END;DROP VIEW z_mn;COMMIT;
