/*
  Custom script to add next meal automatically.  Invoke it thus:
	.read sequence.sqlite3
  This is something NUTsqlite can't do, complicated meal ordering with
  automatic changes to personal options!
*/

begin;

UPDATE mealfoods
SET    nutr_no = NULL;UPDATE options
SET    defanal_am =
       (
              SELECT
                     CASE
                            WHEN defanal_am >= 45 THEN 45
                            WHEN o.currentmeal = lastmeal THEN defanal_am + 1
                            ELSE defanal_am
                     END
              FROM   options o,
                     am_analysis_header);WITH newcm
     (
          meal_id
     )
     AS
     (
          WITH cm1
               (
                    base,
                    meal
               )
               AS
               (
                    WITH cm
                         (
                              base,
                              meal
                         )
                         AS
                         (
                                SELECT currentmeal / 100,
                                       currentmeal % 100
                                FROM   options
                         )
                  SELECT
                         CASE
                                WHEN meal = 3 THEN Date(Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2), '+1 day')
                                ELSE Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2)
                         END,
                         CASE
                                WHEN meal = 3 THEN 1
                                ELSE meal + 1
                         END
                  FROM   cm
               )
        SELECT Cast( Substr(base, 1, 4)
                      || Substr(base, 6, 2)
                      || Substr(base, 9, 2) AS INT) * 100 + meal
        FROM   cm1
     )
UPDATE options
SET    currentmeal =
       (
              SELECT meal_id
              FROM   newcm);DROP VIEWIF EXISTS z_mn;CREATE temp VIEW z_mn AS
WITH meal
     (
          m,
          mod2
     )
     AS
     (
            SELECT options.currentmeal % 100,
                   maxmeal %             2
            FROM   options,
                   am_analysis_header
     )SELECT
       CASE
              WHEN mod2 = 0 THEN
                     CASE
                            WHEN m = 1 THEN 'K Breakfast'
                            WHEN m = 2 THEN 'K Dinner'
                            ELSE 'K Supper'
                     END
              ELSE
                     CASE
                            WHEN m = 1 THEN 'K Breakfast'
                            WHEN m = 2 THEN 'K Dinner'
                            ELSE 'K Supper'
                     END
       END AS mn,
       m
FROM   meal;INSERT INTO currentmeal
SELECT ndb_no,
       gm_wgt,
       nutrdesc
FROM   theusual
WHERE  meal_name =
       (
              SELECT mn
              FROM   z_mn);DROP VIEW z_mn;
/*
  This file implements a gimmick whereby however much gelatin is required to meet the
  glycine dv has its protein added to the protein dv
*/

UPDATE nutr_def
SET    nutopt = 90.0
                + (SELECT nutr_val
                   FROM   nut_in_meals
                   WHERE  ndb_no = 19177
                          AND nutrdesc = 'Protein')
WHERE  nutrdesc = 'Protein';
/*
 redestribute oil/fat foods in keto meal
*/

INSERT INTO currentmeal
VALUES      (4047,
             NULL,
             NULL);

INSERT INTO currentmeal
VALUES      (4584,
             NULL,
             NULL);

INSERT INTO currentmeal
SELECT ndb_no,
       CASE
         WHEN ndb_no = 4584 THEN 0.9
         ELSE 0.0
       END * gm_wgt * third / fat,
       NULL
FROM   (WITH first
             AS (SELECT m.ndb_no,
                        gm_wgt,
                        gm_wgt * nutr_val / 100.0 AS fat
                 FROM   mealfoods m
                        join nut_data n
                          ON m.ndb_no = n.ndb_no
                             AND n.nutr_no = 204
                 WHERE  meal_id = (SELECT currentmeal
                                   FROM   options)
                        AND m.ndb_no IN ( 1145, 4047, 4584 ))
        SELECT *,
               (SELECT SUM(fat) / 3.0
                FROM   first) AS third
         FROM   first)
WHERE  ndb_no IN ( 4047, 4584 );

DELETE FROM mealfoods
WHERE  gm_wgt = 0.0
       AND ndb_no IN ( 4047, 4584 )
       AND meal_id = (SELECT currentmeal
                      FROM   options);

COMMIT;
