/*
  Custom script to add next meal automatically.  Invoke it thus:
	.read sequence.sqlite3
  This is something NUTsqlite can't do, complicated meal ordering with
  automatic changes to personal options!
*/

begin;

WITH newcm
     (
          meal_id
     )
     AS
     (
          WITH cm1
               (
                    base,
                    meal
               )
               AS
               (
                    WITH cm
                         (
                              base,
                              meal
                         )
                         AS
                         (
                                SELECT currentmeal / 100,
                                       currentmeal % 100
                                FROM   options
                         )
                  SELECT
                         CASE
                                WHEN meal = 3 THEN Date(Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2), '+1 day')
                                ELSE Substr(base, 1, 4)
                                              || '-'
                                              || Substr(base, 5, 2)
                                              || '-'
                                              || Substr(base, 7, 2)
                         END,
                         CASE
                                WHEN meal = 3 THEN 1
                                ELSE meal + 1
                         END
                  FROM   cm
               )
        SELECT Cast( Substr(base, 1, 4)
                      || Substr(base, 6, 2)
                      || Substr(base, 9, 2) AS INT) * 100 + meal
        FROM   cm1
     )
UPDATE options
SET    currentmeal =
       (
              SELECT meal_id
              FROM   newcm);UPDATE options
SET    defanal_am = 1;DROP VIEWIF EXISTS z_mn;CREATE temp VIEW z_mn AS
WITH meal
     (
          m
     )
     AS
     (
            SELECT currentmeal % 100
            FROM   options
     )SELECT
       CASE
              WHEN m = 1 THEN 'R Breakfast'
              WHEN m = 2 THEN 'KC Dinner'
              ELSE 'R Supper'
       END AS mn,
       m
FROM   meal;INSERT INTO currentmeal
SELECT ndb_no,
       gm_wgt,
       nutrdesc
FROM   theusual
WHERE  meal_name =
       (
              SELECT mn
              FROM   z_mn);UPDATE nutr_def
SET    nutopt = 0.0
WHERE  nutrdesc = 'Total Fat';

-- update nutr_def set nutopt = case when (select m from z_mn) in (1, 3) then 125.0 else 140.0 end where NutrDesc = 'Protein';WITH temp
      (
            meal2nfc
      )
      AS
      (
             SELECT Sum(nutr_val * gm_wgt / 100.0)
             FROM   mealfoods
             JOIN   nut_data nd
             using  (ndb_no)
             WHERE  nd.nutr_no = 2000
             AND    meal_id =
                    (
                           SELECT Max(meal_id)
                           FROM   mealfoods
                           WHERE  meal_id % 100 = 2)
      )
UPDATE nutr_def
SET    nutopt =
       CASE
              WHEN
                     (
                            SELECT m
                            FROM   z_mn) IN (1,
                                             3) THEN (180.0 -
                     (
                            SELECT meal2nfc
                            FROM   temp)) * 1.5
              ELSE -1
       END
WHERE  nutrdesc = 'Non-Fiber Carb';COMMIT;
